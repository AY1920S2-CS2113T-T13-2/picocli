plugins {
    id 'java'
    id 'distribution'
    id 'maven-publish'
    id 'com.jfrog.bintray'
    id 'java-library'
    id 'org.beryx.jar' version '1.1.3'
}

group 'info.picocli'
description 'Picocli JPMS module.'
version "$projectVersion"
ext.moduleName = 'info.picocli'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

task copyRootProjectCode(type: Copy) {    
    from("${rootProject.projectDir}/src/main/java"){
        exclude '**/groovy'
    }
    into "${projectDir}/src/main/java"
}
task cleanupRootProjectCode(type: Delete) {
    delete "${projectDir}/src/main/java/picocli"
    delete fileTree("${projectDir}/src/main/java") {
        exclude '**/module-info.java'
    }
}

compileJava {
    inputs.property("moduleName", moduleName)   
    doFirst {
        if (org.gradle.api.JavaVersion.current().isJava9Compatible()) {
            options.compilerArgs = [
                    '--module-path', classpath.asPath,
            ]
        }
        classpath = files()
    }
}

assemble.finalizedBy cleanupRootProjectCode


test {
    // Excluding unit tests, should have been generated already with the root project.
    exclude 'picocli'
}

jar {
    manifest {
        attributes 'Specification-Title'   : 'picocli-jpms-module',
                   'Specification-Vendor'  : 'Remko Popma',
                   'Specification-Version' : version,
                   'Implementation-Title'  : 'picocli-jpms-module',
                   'Implementation-Vendor' : 'Remko Popma',
                   'Implementation-Version': version,
                   'Main-Class'            : 'picocli.AutoComplete'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }    
}

compileJava.dependsOn(copyRootProjectCode)